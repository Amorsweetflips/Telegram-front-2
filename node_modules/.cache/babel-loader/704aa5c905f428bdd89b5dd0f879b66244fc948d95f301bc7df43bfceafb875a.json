{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amor\\\\Downloads\\\\Telegram-front-scaffold\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\n// src/components/ChatInput.js\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { sendReply } from '../api';\nimport { useAuth } from '../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  padding: 8px;\n  background: ${({\n  theme\n}) => theme.colors.surface};\n`;\n_c = Form;\nconst Input = styled.input`\n  flex: 1;\n  padding: 8px;\n  background: ${({\n  theme\n}) => theme.colors.inputBg};\n  border: none;\n  border-radius: 4px;\n  color: ${({\n  theme\n}) => theme.colors.text};\n`;\n_c2 = Input;\nconst Button = styled.button`\n  margin-left: 8px;\n  background: ${({\n  theme\n}) => theme.colors.accent};\n  color: #fff;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n`;\n_c3 = Button;\nexport default function ChatInput({\n  chatName,\n  onSent\n}) {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [text, setText] = useState('');\n  const submit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    await sendReply(chatName, text, token);\n    onSent(text);\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"XQ+1ypUAjSj+DceTtzTN7BCggfY=\", false, function () {\n  return [useAuth];\n});\n_c4 = ChatInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"ChatInput\");","map":{"version":3,"names":["React","useState","styled","sendReply","useAuth","jsxDEV","_jsxDEV","Form","form","theme","colors","surface","_c","Input","input","inputBg","text","_c2","Button","button","accent","_c3","ChatInput","chatName","onSent","_s","token","setText","submit","e","preventDefault","trim","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c4","$RefreshReg$"],"sources":["C:/Users/Amor/Downloads/Telegram-front-scaffold/src/components/ChatInput.js"],"sourcesContent":["// src/components/ChatInput.js\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { sendReply } from '../api';\r\nimport { useAuth } from '../AuthContext';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  padding: 8px;\r\n  background: ${({ theme }) => theme.colors.surface};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  padding: 8px;\r\n  background: ${({ theme }) => theme.colors.inputBg};\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 8px;\r\n  background: ${({ theme }) => theme.colors.accent};\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default function ChatInput({ chatName, onSent }) {\r\n  const { token } = useAuth();\r\n  const [text, setText] = useState('');\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) return;\r\n    await sendReply(chatName, text, token);\r\n    onSent(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submit}>\r\n      <Input \r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <Button type=\"submit\">Send</Button>\r\n    </Form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,IAAI,GAAGL,MAAM,CAACM,IAAI;AACxB;AACA;AACA,gBAAgB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,OAAO;AACnD,CAAC;AAACC,EAAA,GAJIL,IAAI;AAMV,MAAMM,KAAK,GAAGX,MAAM,CAACY,KAAK;AAC1B;AACA;AACA,gBAAgB,CAAC;EAAEL;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACK,OAAO;AACnD;AACA;AACA,WAAW,CAAC;EAAEN;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACM,IAAI;AAC3C,CAAC;AAACC,GAAA,GAPIJ,KAAK;AASX,MAAMK,MAAM,GAAGhB,MAAM,CAACiB,MAAM;AAC5B;AACA,gBAAgB,CAAC;EAAEV;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACU,MAAM;AAClD;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIH,MAAM;AASZ,eAAe,SAASI,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM;IAAEC;EAAM,CAAC,GAAGtB,OAAO,CAAC,CAAC;EAC3B,MAAM,CAACY,IAAI,EAAEW,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM2B,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,CAAC,EAAE;IAClB,MAAM5B,SAAS,CAACoB,QAAQ,EAAEP,IAAI,EAAEU,KAAK,CAAC;IACtCF,MAAM,CAACR,IAAI,CAAC;IACZW,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACErB,OAAA,CAACC,IAAI;IAACyB,QAAQ,EAAEJ,MAAO;IAAAK,QAAA,gBACrB3B,OAAA,CAACO,KAAK;MACJqB,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAGN,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFnC,OAAA,CAACY,MAAM;MAACwB,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX;AAAChB,EAAA,CAtBuBH,SAAS;EAAA,QACblB,OAAO;AAAA;AAAAuC,GAAA,GADHrB,SAAS;AAAA,IAAAV,EAAA,EAAAK,GAAA,EAAAI,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}