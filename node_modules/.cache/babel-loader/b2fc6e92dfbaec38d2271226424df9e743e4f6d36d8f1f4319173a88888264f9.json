{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amor\\\\Downloads\\\\Telegram-front-scaffold\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// File: src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle, theme } from './theme';\nimport { AuthProvider, useAuth } from './AuthContext';\nimport Sidebar from './components/Sidebar';\nimport ChatWindow from './components/ChatWindow';\nimport SuggestionCarousel from './components/SuggestionCarousel';\nimport ChatInput from './components/ChatInput';\nimport SignIn from './components/SignIn';\nimport { getChatMessages } from './api';\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  currentChat\n}) {\n  _s();\n  const {\n    token,\n    logout\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [lastMsg, setLastMsg] = useState('');\n\n  // Load messages when chat changes\n  useEffect(() => {\n    if (!currentChat) return;\n    getChatMessages(currentChat, token).then(msgs => {\n      var _msgs;\n      setMessages(msgs);\n      setLastMsg(((_msgs = msgs[msgs.length - 1]) === null || _msgs === void 0 ? void 0 : _msgs.message) || '');\n    });\n  }, [currentChat, token]);\n\n  // Build the WS URL only when we have a valid chat\n  const wsUrl = currentChat ? `${process.env.REACT_APP_API_URL.replace(/\\/+$/, '')}/ws/${currentChat}` : null;\n\n  // Real-time updates via WebSocket (Option A guard)\n  useWebSocket(wsUrl, token, newMsg => {\n    setMessages(prev => [...prev, newMsg]);\n    setLastMsg(newMsg.message);\n  });\n  if (!currentChat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem'\n      },\n      children: \"Select a chat from the sidebar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        padding: '1rem',\n        background: theme.colors.surface\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        style: {\n          float: 'right'\n        },\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0,\n          color: theme.colors.text\n        },\n        children: currentChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuggestionCarousel, {\n      chatName: currentChat,\n      lastMessage: lastMsg,\n      onChoose: opt => {\n        setMessages(prev => [...prev, {\n          id: Date.now(),\n          sender_username: '<you>',\n          message: opt\n        }]);\n        setLastMsg(opt);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      chatName: currentChat,\n      onSent: text => setLastMsg(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"qUjPze6vLOURjCSBWFmc6dA94VY=\", false, function () {\n  return [useAuth, useWebSocket];\n});\n_c = Dashboard;\nfunction AppInner() {\n  _s2();\n  const {\n    token,\n    login\n  } = useAuth();\n  const [currentChat, setCurrentChat] = useState(null);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(SignIn, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      selected: currentChat,\n      onSelect: setCurrentChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      currentChat: currentChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s2(AppInner, \"mtVYkWjBNHdODxq2E1twy20aaG0=\", false, function () {\n  return [useAuth];\n});\n_c2 = AppInner;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppInner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"AppInner\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","GlobalStyle","theme","AuthProvider","useAuth","Sidebar","ChatWindow","SuggestionCarousel","ChatInput","SignIn","getChatMessages","useWebSocket","jsxDEV","_jsxDEV","Dashboard","currentChat","_s","token","logout","messages","setMessages","lastMsg","setLastMsg","then","msgs","_msgs","length","message","wsUrl","process","env","REACT_APP_API_URL","replace","newMsg","prev","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","display","flexDirection","background","colors","surface","onClick","float","margin","color","text","chatName","lastMessage","onChoose","opt","id","Date","now","sender_username","onSent","_c","AppInner","_s2","login","setCurrentChat","onLogin","height","selected","onSelect","_c2","App","_c3","$RefreshReg$"],"sources":["C:/Users/Amor/Downloads/Telegram-front-scaffold/src/App.js"],"sourcesContent":["// File: src/App.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyle, theme } from './theme';\r\nimport { AuthProvider, useAuth } from './AuthContext';\r\nimport Sidebar from './components/Sidebar';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport SuggestionCarousel from './components/SuggestionCarousel';\r\nimport ChatInput from './components/ChatInput';\r\nimport SignIn from './components/SignIn';\r\nimport { getChatMessages } from './api';\r\nimport { useWebSocket } from './hooks/useWebSocket';\r\n\r\nfunction Dashboard({ currentChat }) {\r\n  const { token, logout } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [lastMsg, setLastMsg] = useState('');\r\n\r\n  // Load messages when chat changes\r\n  useEffect(() => {\r\n    if (!currentChat) return;\r\n    getChatMessages(currentChat, token).then((msgs) => {\r\n      setMessages(msgs);\r\n      setLastMsg(msgs[msgs.length - 1]?.message || '');\r\n    });\r\n  }, [currentChat, token]);\r\n\r\n  // Build the WS URL only when we have a valid chat\r\n  const wsUrl = currentChat\r\n    ? `${process.env.REACT_APP_API_URL.replace(/\\/+$/, '')}/ws/${currentChat}`\r\n    : null;\r\n\r\n  // Real-time updates via WebSocket (Option A guard)\r\n  useWebSocket(wsUrl, token, (newMsg) => {\r\n    setMessages((prev) => [...prev, newMsg]);\r\n    setLastMsg(newMsg.message);\r\n  });\r\n\r\n  if (!currentChat) {\r\n    return <div style={{ padding: '2rem' }}>Select a chat from the sidebar.</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n      <header style={{ padding: '1rem', background: theme.colors.surface }}>\r\n        <button onClick={logout} style={{ float: 'right' }}>Sign Out</button>\r\n        <h2 style={{ margin: 0, color: theme.colors.text }}>{currentChat}</h2>\r\n      </header>\r\n\r\n      <ChatWindow messages={messages} />\r\n\r\n      <SuggestionCarousel\r\n        chatName={currentChat}\r\n        lastMessage={lastMsg}\r\n        onChoose={(opt) => {\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            { id: Date.now(), sender_username: '<you>', message: opt },\r\n          ]);\r\n          setLastMsg(opt);\r\n        }}\r\n      />\r\n\r\n      <ChatInput\r\n        chatName={currentChat}\r\n        onSent={(text) => setLastMsg(text)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AppInner() {\r\n  const { token, login } = useAuth();\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n\r\n  if (!token) {\r\n    return <SignIn onLogin={login} />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <Sidebar selected={currentChat} onSelect={setCurrentChat} />\r\n      <Dashboard currentChat={currentChat} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <AppInner />\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}