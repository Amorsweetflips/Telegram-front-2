{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\n// optional: add a request interceptor\napi.interceptors.request.use(config => {\n  // e.g. attach auth token if you have one\n  // config.headers.Authorization = `Bearer ${process.env.REACT_APP_TOKEN}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// optional: add a response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // global error handling\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","error","Promise","reject","response"],"sources":["C:/Users/Amor/Downloads/Telegram-front-scaffold/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\n// optional: add a request interceptor\r\napi.interceptors.request.use(config => {\r\n  // e.g. attach auth token if you have one\r\n  // config.headers.Authorization = `Bearer ${process.env.REACT_APP_TOKEN}`;\r\n  return config;\r\n}, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// optional: add a response interceptor\r\napi.interceptors.response.use(response => {\r\n  return response;\r\n}, error => {\r\n  // global error handling\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC;EACA;EACA,OAAOA,MAAM;AACf,CAAC,EAAEC,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACM,YAAY,CAACO,QAAQ,CAACL,GAAG,CAACK,QAAQ,IAAI;EACxC,OAAOA,QAAQ;AACjB,CAAC,EAAEH,KAAK,IAAI;EACV;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}